#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –≤ Telegram
"""

import requests
import time
import json
from telegram_notifications import notifier, check_system_status

def get_system_health():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã"""
    try:
        response = requests.get("http://localhost:5000/health", timeout=5)
        if response.status_code == 200:
            return response.json()
        else:
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def monitor_system():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Å–∏—Å—Ç–µ–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    print("üîç –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã...")
    print("üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ Telegram")
    print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥")
    print("=" * 50)
    
    last_status = None
    
    while True:
        try:
            health_data = get_system_health()
            
            if not health_data:
                print(f"‚ùå {time.strftime('%H:%M:%S')} - –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–∏—Å—Ç–µ–º–µ")
                notifier.send_critical_alert("‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
                time.sleep(30)
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
            check_system_status(health_data)
            
            # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
            ready_clients = health_data.get("ready_clients", 0)
            enabled_accounts = health_data.get("enabled_accounts", 0)
            available_accounts = sum(1 for acc in health_data.get("accounts", {}).values() 
                                   if acc.get("enabled") and acc.get("ready") and acc.get("flood_wait_until", 0) <= 0)
            
            current_status = f"‚úÖ {ready_clients}/{enabled_accounts} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤–æ, {available_accounts} –¥–æ—Å—Ç—É–ø–Ω–æ"
            
            if current_status != last_status:
                print(f"üìä {time.strftime('%H:%M:%S')} - {current_status}")
                last_status = current_status
            
            time.sleep(30)
            
        except KeyboardInterrupt:
            print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            time.sleep(30)

if __name__ == "__main__":
    monitor_system() 